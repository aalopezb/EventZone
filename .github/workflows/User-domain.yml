name: Build and Deploy User Domain to EC2 12.1

on:
  push:
    branches:
      - QA
    paths:
      - 'Backend/User-domain/**'
      - 'Frontend-Domains/user-frontend/**'
      - '.github/workflows/User-domain.yml'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_PASSWORD }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push user-frontend image
        run: |
          docker build -t $DOCKERHUB_USERNAME/user-frontend:QA ./Frontend-Domains/user-frontend
          docker push $DOCKERHUB_USERNAME/user-frontend:QA

      - name: Build and push register-service image
        run: |
          docker build -t $DOCKERHUB_USERNAME/register-service:QA ./Backend/User-domain/register-service
          docker push $DOCKERHUB_USERNAME/register-service:QA

      - name: Build and push auth-service image
        run: |
          docker build -t $DOCKERHUB_USERNAME/auth-service:QA ./Backend/User-domain/auth-service
          docker push $DOCKERHUB_USERNAME/auth-service:QA

      - name: Build and push user-profile-service image
        run: |
          docker build -t $DOCKERHUB_USERNAME/user-profile-service:QA ./Backend/User-domain/user-profile-service
          docker push $DOCKERHUB_USERNAME/user-profile-service:QA

      - name: Build and push user-roles-service image
        run: |
          docker build -t $DOCKERHUB_USERNAME/user-roles-service:QA ./Backend/User-domain/user-roles-service
          docker push $DOCKERHUB_USERNAME/user-roles-service:QA

      - name: Build and push preferences-service image
        run: |
          docker build -t $DOCKERHUB_USERNAME/preferences-service:QA ./Backend/User-domain/preferences-service
          docker push $DOCKERHUB_USERNAME/preferences-service:QA

      - name: Build and push notifications-service image
        run: |
          docker build -t $DOCKERHUB_USERNAME/notifications-service:QA ./Backend/User-domain/notifications-service
          docker push $DOCKERHUB_USERNAME/notifications-service:QA

      - name: Build and push user-activity-service image
        run: |
          docker build -t $DOCKERHUB_USERNAME/user-activity-service:QA ./Backend/User-domain/user-activity-service
          docker push $DOCKERHUB_USERNAME/user-activity-service:QA

      - name: Build and push login-service image
        run: |
          docker build -t $DOCKERHUB_USERNAME/login-service:QA ./Backend/User-domain/login-service
          docker push $DOCKERHUB_USERNAME/login-service:QA

  deploy_ec2:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Install Docker Compose v2 on EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_KEY }}
          port: 22
          script: |
            mkdir -p ~/.docker/cli-plugins
            if [ ! -f ~/.docker/cli-plugins/docker-compose ]; then
              curl -SL https://github.com/docker/compose/releases/download/v2.26.1/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
              chmod +x ~/.docker/cli-plugins/docker-compose
            fi
            docker compose version

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_SSH_KEY }}
          port: 22
          script: |
            cd /home/${{ env.EC2_USER }}/user-domain || exit 1
            git checkout QA
            git pull origin QA
            docker compose pull
            docker compose up -d
